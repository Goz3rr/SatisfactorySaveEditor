<Window x:Class="SatisfactorySaveEditor.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:model="clr-namespace:SatisfactorySaveEditor.Model"
        xmlns:converter="clr-namespace:SatisfactorySaveEditor.Converter"
        xmlns:util="clr-namespace:SatisfactorySaveEditor.Util"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        DataContext="{Binding MainViewModel, Source={StaticResource Locator}, Mode=OneTime}"
        Title="Satisfactory Save Editor" Width="1500" Height="720">
    <!--below was my attempt to bind clicking x to bringing up the 'do you really want to exit' prompt but I couldn't figure out canceling. left it here for now. -Rob B
    <!--<i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ExitCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>-->
    <Window.Resources>
        <util:BindingProxy x:Key="Proxy" Data="{Binding}"/>
        <converter:SaveNodeItemToStringConverter x:Key="SaveNodeItemToStringConverter"/>
        <converter:SerializablePropertyToTypeStringConverter x:Key="SerializablePropertyToTypeStringConverter"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="O" Command="{Binding OpenCommand}" />
        <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveCommand}" CommandParameter="False"/>
        <KeyBinding Key="F12" Command="{Binding SaveCommand}" CommandParameter="True"/>
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Open" InputGestureText="Ctrl+O" Command="{Binding OpenCommand}"/>
                <MenuItem Header="_Save" InputGestureText="Ctrl+S" Command="{Binding SaveCommand}" CommandParameter="False"/>
                <MenuItem Header="_Save as" InputGestureText="F12" Command="{Binding SaveCommand}" CommandParameter="True"/>
                <Separator/>
                <MenuItem Header="_Exit" InputGestureText="Alt+F4" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="_Cheats">
                <MenuItem Header="Unlock all research" Command="{Binding CheatCommand}" CommandParameter="Research"/>
                <MenuItem Header="Unlock map" Command="{Binding CheatCommand}" CommandParameter="UnlockMap"/>
                <MenuItem Header="Give more inventory slots" Command="{Binding CheatCommand}" CommandParameter="InventorySize"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="About" Command="{Binding AboutCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
            </MenuItem>
        </Menu>
        <Separator DockPanel.Dock="Top" Opacity="0.25"/>
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>

            <TreeView Grid.Column="0" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" Name="SaveNodeTreeView" ItemsSource="{Binding RootItem}">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <EventSetter Event="Selected" Handler="TreeViewSelectedItemChanged"/>
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" /> 
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <command:EventToCommand Command="{Binding Source={StaticResource Proxy}, Path=Data.TreeSelectCommand}" CommandParameter="{Binding ElementName=SaveNodeTreeView, Path=SelectedItem}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type model:SaveComponentModel}" ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="[C] " Foreground="Green"/>
                            <TextBlock Text="{Binding ., Converter={StaticResource SaveNodeItemToStringConverter}}"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type model:SaveObjectModel}" ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="[O] " Foreground="Violet"/>
                            <TextBlock Text="{Binding ., Converter={StaticResource SaveNodeItemToStringConverter}}"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type model:SaveEntityModel}" ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="[E] " Foreground="Blue"/>
                            <TextBlock Text="{Binding ., Converter={StaticResource SaveNodeItemToStringConverter}}"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>
            
            <GridSplitter HorizontalAlignment="Center" Width="3" Grid.Column="1"/>
            <ContentControl Grid.Column="2" Margin="5" Content="{Binding SelectedItem}">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type model:SaveEntityModel}">
                        <DockPanel>
                            <TextBlock TextWrapping="Wrap" DockPanel.Dock="Top" Text="{Binding Title, FallbackValue='No item selected', StringFormat='Entity name: {0}'}"/>
                            <TextBlock TextWrapping="Wrap" DockPanel.Dock="Top" Text="{Binding RootObject, FallbackValue='No item selected', StringFormat='Root: {0}'}"/>
                            <TextBlock TextWrapping="Wrap" DockPanel.Dock="Top" Text="{Binding Int4, FallbackValue='No item selected', StringFormat='Int4: {0}'}"/>
                            <TextBlock TextWrapping="Wrap" DockPanel.Dock="Top" Text="{Binding Int6, FallbackValue='No item selected', StringFormat='Int6: {0}'}"/>
                            <TextBlock TextWrapping="Wrap" DockPanel.Dock="Top" Text="{Binding Rotation, FallbackValue='No item selected', StringFormat='Rotation: {0}'}"/>
                            <TextBlock TextWrapping="Wrap" DockPanel.Dock="Top" Text="{Binding Position, FallbackValue='No item selected', StringFormat='Position: {0}'}"/>
                            <TextBlock TextWrapping="Wrap" DockPanel.Dock="Top" Text="{Binding Scale, FallbackValue='No item selected', StringFormat='Scale: {0}'}"/>
                            <TextBlock TextWrapping="Wrap" DockPanel.Dock="Top" Text="{Binding ParentObjectName, FallbackValue='No item selected', StringFormat='ParentObjectName: {0}'}"/>
                            <TextBlock TextWrapping="Wrap" DockPanel.Dock="Top" Text="{Binding ParentObjectRoot, FallbackValue='No item selected', StringFormat='ParentObjectRoot: {0}'}"/>
                            <GroupBox Header="Properties">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <DataGrid ScrollViewer.CanContentScroll="False" IsReadOnly="True" SelectionUnit="Cell" GridLinesVisibility="Horizontal" ItemsSource="{Binding Fields}" RowHeight="{x:Static sys:Double.NaN}" HeadersVisibility="Column" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="True" CanUserResizeRows="False">
                                        <DataGrid.Resources>
                                            <ResourceDictionary>
                                                <ResourceDictionary.MergedDictionaries>
                                                    <ResourceDictionary Source="PropertyTemplateDictionary.xaml"/>
                                                </ResourceDictionary.MergedDictionaries>

                                                <Style TargetType="DataGridCell">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="{x:Null}" />
                                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                    <Style.Setters>
                                                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                        <Setter Property="Foreground" Value="Black" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                                    <Grid Background="{TemplateBinding Background}">
                                                                        <ContentPresenter Margin="3" VerticalAlignment="Center"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style.Setters>
                                                </Style>
                                            </ResourceDictionary>
                                        </DataGrid.Resources>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Name" Width="2*" Binding="{Binding PropertyName}"/>
                                            <DataGridTextColumn Header="Type" Width="*" Binding="{Binding ., Converter={StaticResource SerializablePropertyToTypeStringConverter}}"/>
                                            <DataGridTemplateColumn Header="Value" Width="3*">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ContentPresenter Content="{Binding .}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <Button Grid.Row="1" Content="Add property" Margin="0,5,0,0" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddPropertyCommand}" CommandParameter="{Binding .}"/>
                                </Grid>
                            </GroupBox>
                        </DockPanel>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type model:SaveComponentModel}">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Top" Text="{Binding Title, FallbackValue='No item selected', StringFormat='Component name: {0}'}"/>
                            <TextBlock DockPanel.Dock="Top" Text="{Binding RootObject, FallbackValue='No item selected', StringFormat='Root: {0}'}"/>
                            <TextBlock DockPanel.Dock="Top" Text="{Binding ParentEntityName, FallbackValue='No item selected', StringFormat='ParentEntityName: {0}'}"/>
                            <GroupBox Header="Properties">
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <DataGrid ScrollViewer.CanContentScroll="False" IsReadOnly="True" SelectionUnit="Cell" GridLinesVisibility="Horizontal" ItemsSource="{Binding Fields}" RowHeight="{x:Static sys:Double.NaN}" HeadersVisibility="Column" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="True" CanUserResizeRows="False">
                                            <DataGrid.Resources>
                                                <ResourceDictionary>
                                                    <ResourceDictionary.MergedDictionaries>
                                                        <ResourceDictionary Source="PropertyTemplateDictionary.xaml"/>
                                                    </ResourceDictionary.MergedDictionaries>

                                                    <Style TargetType="DataGridCell">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Background" Value="{x:Null}" />
                                                                <Setter Property="BorderBrush" Value="{x:Null}" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                        <Style.Setters>
                                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                            <Setter Property="Foreground" Value="Black" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                                        <Grid Background="{TemplateBinding Background}">
                                                                            <ContentPresenter Margin="3" VerticalAlignment="Center"/>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style.Setters>
                                                    </Style>
                                                </ResourceDictionary>
                                            </DataGrid.Resources>
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Name" Width="2*" Binding="{Binding PropertyName}"/>
                                                <DataGridTextColumn Header="Type" Width="*" Binding="{Binding ., Converter={StaticResource SerializablePropertyToTypeStringConverter}}"/>
                                                <DataGridTemplateColumn Header="Value" Width="3*">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <ContentPresenter Content="{Binding .}"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <Button Grid.Row="1" Content="Add property" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddPropertyCommand}" CommandParameter="{Binding .}"/>
                                    </Grid>
                                </ScrollViewer>
                            </GroupBox>
                        </DockPanel>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type model:SaveObjectModel}"/>
                </ContentControl.Resources>
            </ContentControl>
        </Grid>
    </DockPanel>
</Window>